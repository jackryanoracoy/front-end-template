/*!
 * Moonshine
 * Scalable and Maintainable Architecture.
 *
 * Author:   Jack Ryan Oracoy
 * Website:  https://jackryanoracoy.github.io
 * Email:    jackryanoracoy@gmail.com
 * URL:      https://github.com/jackryanoracoy/moonshine
 * License:  https://github.com/jackryanoracoy/moonshine/blob/master/LICENSE.txt
 */


/*
 * CSS Methodologies
 *
 * Organize project files that can better deal with CSS specifics like global namespace, cascade and selectors specificity.
 * Shares the same methodology of some popular methodologies like ITCSS, BEM, SMACSS and OOCSS.
 * This approach is to ensure everyone who participates in the development of a website works with a single codebase and speaks the same language.
 *
 * # Separated CSS codebase
 * setting.css - contains custom properties (css variables), font-face, etc.
 * base.css - reset and/or normalize styles, box-sizing definition, etc.
 * utitity.css - utilities and helper classes with ability to override anything.
 * layout.css - specific UI layouts.
 * component.css - specific UI components.
 *
 *
 * # Naming convention
 * Highly useful, powerful, and simple naming convention that makes your front-end code easier to read and understand,
 * easier to work with, easier to scale, more robust and explicit, and a lot more strict.
 *
 * prefix    = (u) utility, (l) layout, (c) component.
 * classname = preferred class name.
 * modifier  = preferred modifier name.
 * viewport  = (sm) small, (md) medium, (lg) large, (xl) extra large.
 * int       = 0-9.
 * others    = min, max, etc...
 */


@import "setting.css";
@import "base.css";
@import "utility.css";
@import "layout.css";
@import "component.css";
